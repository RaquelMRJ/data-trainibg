from datetime import datetime
from airflow.models.dag import DAG
from airflow.operators.slack_operator import SlackAPIPostOperator
from airflow.operators.bash import BashOperator
def slack_failed_task(context):
    failed_alert = SlackAPIPostOperator(
            task_id='slack_failed',
            channel='tests',
            slack_conn_id="slack_d0a100",
            text=':red_circle: Task Failed',
            username='admin',
            )
    return failed_alert.execute(context=context)
def slack_success_task(context):
    success_alert = SlackAPIPostOperator(
            task_id='slack_success',
            channel='tests',
            slack_conn_id='slack_d0a100',
            text=':green_heart: Task Completed!!',
            username='airflow',
            )
    return success_alert.execute(context=context)
with DAG(
        dag_id='slack_example_on_fail_and_success',
        schedule_interval=None,
        start_date=datetime(2021, 1, 1),
        max_active_runs=1,
        tags=['example'],
        )as dag:
# Send failure alert to channel
    task_with_failed_slack_alert=BashOperator(
            task_id='fail_task',
            bash_command='exit 1',
            on_failure_callback=slack_failed_task,
            )
    # Send success alert to channel
    task_with_success_slack_alert=BashOperator(
            task_id='sucess_task',
            bash_command='date',
            on_success_callback=slack_success_task,
            )
task_with_success_slack_alert >> task_with_failed_slack_alert
